一、集合框架的根接口：
    1、Collection：有序集合的最基础接口。
    2、Map：散列表，无序集合的最基础接口。
二、集合框架的6个基础接口：
    1、Map：map接口存储一组键值对对象，提供key到value的映射。
            子接口：
                A、SortedMap：有序序列接口，映射是根据键的自然顺序排序的。
            抽象类实现：
                A、AbstractMap：实现了大部分map接口的方法。
    2、Collection：是最基本的集合接口，一个Collection代表一组Object。
        Java不提供直接继承自Collection的类，只提供继承与Collection的子接口。
        Collection接口存储一组不唯一，没有顺序的对象。
            子接口：
                A、List：
                B、Set：
            抽象实现类：
                A、AbstractCollection：实现了大部分的接口方法。
    3、List：是一个有序的Collection，使用此接口能够精确的控制每个元素的插入位置。
             能够通过索引来访问List的元素，第一个元素的索引为0，而且允许有相同的元素。
             List接口存储一组不唯一，有序（插入顺序）的对象。
             实现类：
                a、Vector
                b、ArrayList
                c、LinkedList
    4、Set：具有与List完全一样的接口，只是行为上不同，Set不保存重复的元素。
            Set接口存储一组唯一，无序的对象。
            子接口：
                A、SortedSet:
    5、Iterator：迭代器，声明用于遍历集合的接口。
        方法：
            1、Remove删除集合里最近一次next方法返回的值。是唯一安全删除正在遍历过程中的集合的元素的方法。
        子接口：
            1、ListIterator：只能用于各种list类型的迭代。
                             可以指定迭代的初始位置。
                             可以前后迭代，可以获取当前位置前一个和后一个元素的索引。
    6、Queue：队列集合。
三、集合的5个基本抽象类：
    1、AbstractMap：实现了大部分map接口方法。
        子类：
            A、HashMap：
            B、TreeMap：
            C、Hashtable：
            D、WeakHashMap：
    2、AbstractCollection：Collection接口的直接实现类。
        子抽象类：
            A、AbstractList
    3、AbstractList：实现了大部分List接口方法。
        子类：
            a、Vector：
            b、ArrayList：
        子抽象类：
            a、AbstractSequentialList：
    4、AbstractSequentialList：是list接口的简化版，只支持按次序访问。
        子类：
            A、LinkedList
    5、AbstractSet：实现了大部分set接口的方法。
        子类：
            A、HashSet：
            B、TreeSet：
四、集合的9个实现类：
    1、HashMap：是一个哈希散列表，存储键值对映射。根据键的HashCode值存储数据，具有很快的查找速度，最多允许一个null键，不支持线程同步。
        子类：
            A、LinkedHashMap
    2、HashSet：不允许出现重复元素，不保证元素顺序，允许为null的元素。
    3、LinkedList：主要用于创建双向链表数据结构，查找效率低。允许有null元素。
    4、ArrayList：实现了可变大小的数组（动态数组），初始容量为10。
                  扩容方式为声明新的数组，将旧数组复制到新数组，性能低。应在创建实例时指定大小。
                  随机访问和遍历元素时性能高。
    5、TreeMap：SortedMap接口的具体实现，底层采用了红黑树算法实现，一般用于单线程。
    6、TreeSet：可以实现排序等功能。
    7、LinkedHashMap：使用元素的自然顺序对元素进行排序。
    8、LinkedHashSet：具有可预知迭代顺序的set接口的哈希表和链表实现。
    9、Vector：该类与ArrayList非常相似，但是该类是线程同步的。该类允许设置默认的增长长度，默认扩容方式为原来的2倍。
        子类：
            A、Stack：栈
    10、Hashtable：dictionary（字典）类的子类。线程安全的HashMap。
