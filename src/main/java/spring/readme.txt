spring：以最少侵入的方式来管理应用中的代码，所以可以随时安装和卸载。使用spring无需继承框架提供的类。
        结构：
            1、数据库管理
            2、web管理
            3、对象管理
            4、切面

框架的量级轻重不是指框架的大小，而是应用程序与框架的耦合情况。

代理模式：对象A通过持有另一个对象B，可以具有B同样的行为模式。为了对外开放协议，B往往实现接口，A也会实现接口，但却借用B的方法实现。
          但A增强了B，调用B的方法前后都增加了操作。
spring默认使用jdk的动态代理，如果没有接口则使用cglib代理。

防御式编程：所有调用外界的接口，都可以设置代理。不让外界代码对本地代码有入侵，当外界接口发生变化，只需要修改代理代码。

容器：存放对象的对象，并且需要管理对象的声明周期。
IOC：控制反转
DI：依赖注入，spring创建对象的过程中，将对象依赖的属性（简单值、集合、对象）通过配置设置给该对象。
AOP：面向切面，AOP面向周边功能，所以周边功能就是切点。
    结构：
        1、切入点
        2、通知
        3、切面
        4、织入
    核心业务功能和切面功能分别独立开发，然后把切面功能和核心业务功能“编织”在一起，就是AOP。

声明式事务管理：是基于切面和惯例的。
AOP能做什么？
    1、根据配置文件创建及组装对象间的依赖关系。
    2、AOP能无耦合的实现日志记录、性能统计、安全控制。
    3、管理数据库事务。

spring注解
    1、@Autowaird：自动装配，默认按类型匹配。是spring注解
    2、@Resource：自动装配，默认通过name匹配，找不到再按type匹配。是j2ee注解
    3、@Service：声明类是一个bean，ID为类名的首字母小写全拼，多包下相同类名会报错。